# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: Testing and Coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    name: Test pandoc ${{ matrix.config.pandoc }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {pandoc: '2.11.4'}
          - {pandoc: '2.17'}
          - {pandoc: '2.19.2'}
          - {pandoc: 'latest'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      SANDPAPER_TEST_PANDOC: ${{ matrix.config.pandoc }}
      RENV_PATHS_ROOT: ~/.local/share/renv
      OS_VERSION: 1

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          install-r: false
          use-public-rspm: true

      - name: "Set up pandoc"
        uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: ${{ matrix.config.pandoc }}

      - name: "Install sysreqs"
        id: run-apt
        shell: bash
        run: |
          sudo apt update || exit 0
          curl https://carpentries.r-universe.dev/stats/sysdeps 2> /dev/null \
          | jq -r '.headers[0] | select(. != null)' 2> /dev/null \
          > ${{ runner.temp }}/sysdeps.txt
          if [[ `wc -l < ${{ runner.temp }}/sysdeps.txt` -gt 0 ]]; then
            echo 'sysdeps acquired'
          else
            echo 'fetching sysdeps from descriptions'
            curl https://carpentries.r-universe.dev/stats/descriptions \
            | jq -r '._builder.sysdeps | .[].headers | select(. != null)' 2> /dev/null \
            > ${{ runner.temp }}/sysdeps.txt
          fi
          if [[ `wc -l < ${{ runner.temp }}/sysdeps.txt` -eq 0 ]]; then
            echo "::warn::System dependencies could not be acquired. Builds may fail"
            exit 1
          else
            echo "found sysdeps: $(cat ${{ runner.temp }}/sysdeps.txt)"
          fi
          printf "libxslt-dev\n" >> ${{ runner.temp }}/sysdeps.txt
          sudo xargs apt-get install --fix-missing -y < ${{ runner.temp }}/sysdeps.txt || echo "Not on Ubuntu"

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: Restore {renv} cache
        uses: actions/cache@v3
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-${{ env.OS_VERSION }}-renv-${{ runner.r }}-${{ hashFiles('.github/workflows/R-CMD-check.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.OS_VERSION }}-renv-${{ runner.r }}-

      - name: Prime {renv} Cache
        shell: Rscript {0}
        run: |
          renv::init()
          system('rm -rf renv .Rprofile')
          system('git clean -fd -e .github')
          system('git restore .')

      - name: Test package
        if: "${{ matrix.config.pandoc }} != 2.19.2"
        shell: Rscript {0}
        run: |
          testthat::test_local()

      - name: Test coverage
        if: "${{ matrix.config.pandoc }} == 2.19.2"
        shell: Rscript {0}
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )

      - name: Show coverage output
        if: "${{ matrix.config.pandoc }} == 2.19.2"
        shell: bash
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true

      - name: Upload coverage results
        if: "failure() && ${{ matrix.config.pandoc }} == 2.19.2"

        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          echo ::group::Show testthat output
          find check -name 'testthat.Rout*' -exec cat '{}' \; || true
          echo ::endgroup::
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: pandoc-${{ matrix.config.pandoc }}-results
          path: check

      - name: Upload snapshots
        uses: actions/upload-artifact@v3
        with:
          name: pandoc-${{ matrix.config.pandoc }}-testthat-snapshots
          path: check/**/tests*/testthat/_snaps
          if-no-files-found: ignore
